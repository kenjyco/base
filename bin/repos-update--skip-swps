#!/usr/bin/env bash

path=
[[ -d "$1" ]] && path="$1" && shift

for repo in $(repos-list "$path" | tr '\n' '\0' | xargs -0); do
    cd "$repo"
    echo -e "\n===============\n$repo"
    _swps=$(findit --type f --exts "sw[po]" --stamp 2> /dev/null | sort)
    if [[ -n "$_swps" ]]; then
        echo -e "\nThere are vim swp files found, not updating"
        echo -e "\n$_swps"
        continue
    fi
    unset remote
    remote=$(grep "remote \"origin\"" -A 2 .git/config 2>/dev/null| grep url | perl -pe 's/^\s+url = (.*)$/$1/')
    tracking=$(git branch -r | grep "$branch" | grep -v HEAD | perl -pe 's/^\s+(.*)$/$1/')
    if [[ -z "$remote" ]]; then
        echo " - Local-only repo, not updating"
    elif [[ -z "$tracking" ]]; then
        echo " - No tracking branch, gonna do 'fetch'"
        git fetch
    else
        stashstatus=$(git stash)
        if [[ $stashstatus == "No local changes to save" ]]; then
            echo " - Repository is clean.. gonna do 'pull --rebase'"
            git pull --rebase
        else
            echo " - Dirty repo with tracking branch.. gonna do 'stash pull pop'"
            echo "$stashstatus"
            git pull --rebase
            git stash pop --quiet
        fi
        git remote prune origin
    fi
done
