#!/usr/bin/env bash

for repo in $(repos-list | tr '\n' '\0' | xargs -0); do
    repo_display=$(echo $repo | clean-path-outputs)
    cd "$repo"
    branchname=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)
    echo -e "\n===============\n$repo_display ($branchname)"

    merge_branch_candidates=$(git branch | cut -c 3- | grep -E '\b(develop|master|main)\b')
    if [[ -n $(echo -e "$merge_branch_candidates" | grep develop) ]]; then
        merge_branch=develop
    elif [[ -n $(echo -e "$merge_branch_candidates" | grep master) ]]; then
        merge_branch=master
    elif [[ -n $(echo -e "$merge_branch_candidates" | grep main) ]]; then
        merge_branch=main
    fi

    for local_branchname in $(git branch | cut -c 3- | grep -vE "\b(develop|master|main|$branchname)\b" | tr '\n' '\0' | xargs -0); do
        merge_base=$(git merge-base $local_branchname $merge_branch)
        echo -e "\n\n"
        git --no-pager diff $merge_base..$local_branchname
        echo -e "\n\n"
        git --no-pager log --no-merges --date=local --name-status --pretty=format:'%C(yellow)%h %C(reset)%s %C(red)%ad %C(blue)%an%C(reset)' $merge_base..$local_branchname
        echo -e "\n\n"
        message="=============== Delete local branch $local_branchname? [y/n] "
        unset yn
		if [[ -n "$BASH_VERSION" ]]; then
			read -p "$message" yn
		elif [[ -n "$ZSH_VERSION" ]]; then
			vared -p "$message" -c yn
		fi
        [[ "$yn" =~ [yY].* ]] && git branch -D $local_branchname
    done
    cd - &> /dev/null
done
