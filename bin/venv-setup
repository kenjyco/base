#!/usr/bin/env bash

[[ -d "$1" && (-d "$1/bin" || -d "$1/Scripts") ]] && env_name=$1 && shift
if [[ -z "$env_name" ]]; then
    if [[ -n "$1" && "$1" != "clean" ]]; then
        env_name=$1 && shift
    else
        env_name="venv"
    fi
fi
if [[ "$1" == "clean" ]]; then
    rm -rf "$env_name"
    find . \( -name __pycache__ -o -name '.eggs' -o -name '*.egg-info' -o -name 'build' -o -name 'dist' \) -print0 |
        xargs -0 rm -rf
fi
pip_args=(--no-warn-script-location --upgrade --upgrade-strategy eager)
PYTHON="python3"
PIP="$env_name/bin/pip3"
if [[ $(uname) =~ "MINGW" ]]; then
    PYTHON="python"
    PIP="$env_name/Scripts/pip"
fi

if type pyenv &>/dev/null && test -f .python-version; then
    eval "$(pyenv init -)" || exit 1
    PYTHON="python"
    py_version=$(cat .python-version)
    if [[ ! -d "$HOME/.pyenv/versions/$py_version" ]]; then
        pyenv install "$py_version" || exit 1
    fi
fi

[[ ! -d $env_name ]] && $PYTHON -m venv $env_name
PYTHON=$(dirname $PIP)/python
$PYTHON -m pip install --upgrade pip wheel

if [[ -f setup.py ]]; then
    pip_args+=("--editable .")
elif [[ -f requirements.txt ]]; then
    pip_args+=("-r requirements.txt")
fi

extra_packages=(ipython pytest)
[[ ! $(uname) =~ "MINGW" ]] && extra_packages+=(pdbpp)
$PIP install ${extra_packages[@]} ${pip_args[@]}
