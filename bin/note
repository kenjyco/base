#!/usr/bin/env bash
#
# Quickly create or update a markdown file with vim
#   - generated filenames are based on timestamp for the current date and hour
#   - filenames are generated if no arg is passed in or if the path to an
#     existing directory is passed in
#   - if a filename was generated, but not edited, it will be deleted
#   - if a filename was generated based on timestamp, you will have the chance
#     to rename it after you quit vim
#   - if a previously generated filename (that was not renamed) is being
#     updated, you will have the chance to rename it after you quit vim
#   - the last part of a filesystem path (containing at least one /) is assumed
#     to be the filename (with or without the .md extension)
#       - any intermediate sub-directories in the path will be created if needed

newdate="## $(date +'%Y-%m%d %a %r')"
generated=

if [[ -z "$1" ]]; then
    fname_part="$(date +'%Y_%m%d--%a_hour_%H')"
    newdate="## $(date +'%r')"
    generated=yes
elif [[ -d "$1" ]]; then
    fname_part="$(date +'%Y_%m%d--%a_hour_%H')"
    newdate="## $(date +'%r')"
    generated=yes
    cd "$1"
elif [[ "$1" =~ .*\/.* ]]; then
    dirpath=$(dirname "$1")
    fname_part=$(basename "$1")
    [[ ! -d "$dirpath" ]] && mkdir -p "$dirpath"
    cd "$dirpath"
else
    fname_part="$1"
fi

if [[ $PWD != $HOME ]]; then
    extra_title=$(basename "$PWD")
else
    extra_title="HOME"
fi
title="$(echo $fname_part | tr '_' '-') ($extra_title)"

found=$(find . -maxdepth 1 -name "${fname_part}*" -print)
if [[ -n "$found" && "$generated" = "yes" ]]; then
    fname_part="${fname_part}-$(uuidgen | head -c6)"
fi
if [[ "$fname_part" =~ \.md$ ]]; then
    fname="${fname_part}"
else
    fname="${fname_part}.md"
fi

template=
if [[ ! -s "$fname" ]]; then
    # Genarate the file since it does not exist
    template="${title}\n----------\n\n$newdate\n\n"
    echo -e "$template" > "$fname" || exit 1

    # Open the file with vim (in insert mode, at the end of the file)
    vim + -c 'startinsert' $fname
else
    # Dump a timestamp into the existing file
    echo -e "\n$newdate\n\n" >> "$fname" || exit 1

    # Open the file with vim wherever the cursor was before
    vim $fname
fi

content=$(cat "$fname")
if [[ -z "$content" ]]; then
    rm "$fname"
elif [[ "$content" == $(echo -e "$template") ]]; then
    rm "$fname"
else
    num_tail_lines=30
    if tput lines &>/dev/null; then
        num_tail_lines=$(($(tput lines) -5))
    fi
    echo -e "$content" | tail -n $num_tail_lines
    if [[ "$fname" =~ ^[0-9][0-9][0-9][0-9]_[0-9][0-9][0-9][0-9] ]]; then
        echo -en "\n--------------------\nsave as\n> "
        read newfile
        if [[ -n "$newfile" ]]; then
            [[ ! "$newfile" =~ \.md$ ]] && newfile="${newfile}.md"
            mv -nv "$fname" "$newfile"
        fi
    fi
fi
